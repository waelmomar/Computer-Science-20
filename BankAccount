public class BankAccount {

	private static int nextAccountID = 1000000;
	private double balance = 0;
	private double withdrawalFee;
	private String bankAccount;
	private double annualInterestRate;
	public int accountID;
	
	public BankAccount(String BankAccount, int balance, double withdrawalFee, double AnnualInterestRate)
	{
		this.accountID = nextAccountID;
		nextAccountID++;
		this.bankAccount = BankAccount;
		this.balance = balance;
		this.withdrawalFee = withdrawalFee;
		this.annualInterestRate = AnnualInterestRate;
	}
	
	public BankAccount(String BankAccount)
	{
		this(BankAccount, 0 , 0d, 0d);
	}
	
	public BankAccount(String BankAccount, int balance)
	{
		this(BankAccount, balance, 0d, 0d);
	}
	
	public void deposit(double amount)
	{
		balance += amount;
	}
	
	public void withdraw(double amount)
	{
		balance -= amount;
		balance -= withdrawalFee;
	}
	
	public boolean isOverDrawn()
	{
		return balance < 0;
	}
	
	public void addAnnualInterest()
	{
		if (balance > 0) 
		{
			balance += balance * (annualInterestRate / 100);
		}
	}
	
	public String toString()
	{
		double roundedBalance = Math.round(balance * 100.0) / 100.0;
		if (balance >= 0)
		{
			return "BankAccount: name = '" + bankAccount + "'; balance = $" + roundedBalance;
		}
		else
		{
			return "BankAccount: name = '" + bankAccount + "'; balance = ($" + Math.abs(roundedBalance) + ")";
		}
	}
	
	public String getAccountName()
	{
		return bankAccount;
	}
	
	public double getBalance()
	{
		return balance;
	}
	
	public double getWithdrawalFee()
	{
		return withdrawalFee;
	}
	
	public double getAnnualInterestRate()
	{
		return annualInterestRate;
	}
	
	public void setWithdrawalFee(double withdrawalFee)
	{
		this.withdrawalFee = withdrawalFee;
	}
	public void setAnnualInterestRate(double AnnualInterestRate)
	{
		this.annualInterestRate = AnnualInterestRate;
	}
	public int getAccountID()
	{
		return accountID;
	}
	public static int getNextAccountID()
	{
		return nextAccountID;
	}
}
